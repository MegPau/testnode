extends layout

block head
  // Here will go our css/js links
  script(type="text/javascript" src="/js/jquery-3.2.1.min.js" charset="utf-8")
  //script(type="text/javascript" src="/js/popper.min.js" charset="utf-8")
  //script(type="text/javascript" src="/js/bootstrap.min.js" charset="utf-8")
  script(type="text/javascript" src="/js/bootstrap.bundle.min.js" charset="utf-8")
  script(type="text/javascript" src="/js/index.js" charset="utf-8")
  script(type="text/javascript" src='https://d3js.org/d3.v4.min.js')
  link(rel='stylesheet', href='/css/bootstrap.min.css')
  link(rel='stylesheet', href='/css/bootstrap-theme.min.css')
  link(rel='stylesheet', href='/css/main.css')

block content  
  div.container
    div.col-md-6.col-md-offset-3.container
      p #{text}
      button#show-metrics(type="button" class="btn btn-success") Bring the metrics
      #metrics.row
    button.btn.btn-danger(href='/logout' onClick='document.location.href="/logout"') Logout
    div
    
      
  script 
    :coffee-script
      $('body').tooltip({
        selector: '[data-toggle=tooltip]'
      });
      $('#show-metrics').click (e) ->      
        e.preventDefault()
        dataArray = []
        vArray = []
        tArray = []
        $.getJSON "/usermetrics.json", {}, (data) ->       
          for d in data
            $.getJSON "/metrics.json/#{d.id}", {}, (dataMetrics) ->
              console.log "got metrics : #{dataMetrics}"
              content = "<ul>"
              for dm in dataMetrics
                dataArray.push dm
                tArray.push dm.timestamp
                vArray.push dm.value
                content += "<li>timestamp: #{dm.timestamp}, value: #{dm.value}</li>"
              content += "</ul>"
              $('#metrics').append content
        
        setTimeout ->
          chart = d3.select '#metrics'
            .append 'svg'
            .attr 'width', 600
            .attr 'height', 500
            .attr 'id', 'chart'
            .attr 'class', 'col-sm-10'
            
          MARGINS = {
            top: 20,
            right: 20,
            bottom: 20,
            left: 50
          }
        
          HEIGHT = 500
          WIDTH = 600
          
          xRange = d3.scaleBand().range([
              MARGINS.left
              WIDTH - (MARGINS.right)
            ], 1).paddingInner(0.2).domain(dataArray.map (d) ->
                return d.timestamp
              )
          yRange = d3.scaleLinear().range([
              480
              20
            ]).domain([
              0
              Math.max.apply(Math,vArray)
            ])
          xAxis = d3.axisBottom(xRange)
            .tickValues(tArray.sort())
          yAxis = d3.axisLeft(yRange)
            .tickValues(vArray.sort())

          chart.append('svg:g').attr('class', 'x axis').attr('transform', 'translate(0,480)').call(xAxis)
          chart.append('svg:g').attr('class', 'y axis').attr('transform', 'translate(50,0)').call(yAxis)
          tooltipDiv = d3.select("#metrics").append("div")   
            .attr("class", "tooltip col-sm-2")               
            .style("opacity", 0);
          chart.selectAll('rect')
            .data(dataArray)
            .enter()
            .append 'rect'
            .attr 'x', (d) ->
              return xRange(d.timestamp)
            .attr 'y', (d) ->
              return yRange(d.value)
            .attr 'width', xRange.bandwidth()
            .attr 'height', (d) ->
              return (480 - yRange(d.value))
            .attr 'fill', '#8e9196'
            .attr 'title', (d) ->
              return 'Value:' + d.value + ' Timestamp:' + d.timestamp
            .on 'mouseover', (d) ->
              d3.select(this)
                .attr 'fill', '#60739b'
                tooltipDiv.transition().duration(200).style('opacity', 0.9)
                tooltipDiv.html 'Value:' + d.value + ' -  Timestamp:' + d.timestamp
            .on 'mouseout',(d) ->
              d3.select(this)
                .attr 'fill', '#8e9196'
                tooltipDiv.transition()
                  .duration 2000
                  .style 'opacity', 0
        , 1000
        
        ###$.getJSON "/metrics.json", {}, (data) ->
        console.log "got metrics : #{data}"
        content = "<ul>"
        for d in data
          content += "<li>timestamp: #{d.timestamp}, value: #{d.value}</li>"
          content += "</ul>"
          $('#metrics').append content###
